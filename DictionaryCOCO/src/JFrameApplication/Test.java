/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package JFrameApplication;

import API.GSpeechDuplex;
import API.GSpeechResponseListener;
import API.GoogleResponse;
import API.Microphone;
import API.SynthesiserV2;
import dictionarycoco.Word;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javazoom.jl.decoder.JavaLayerException;
import net.sourceforge.javaflacencoder.FLACFileWriter;

/**
 *
 * @author Administrator
 */
public class Test extends javax.swing.JFrame {

    /**
     * Creates new form Test
     */
    final Microphone mic = new Microphone(FLACFileWriter.FLAC);
    GSpeechDuplex duplex = new GSpeechDuplex("AIzaSyAsgIKQ9U3O12D2FOZH5DSnHQTUeXTtL2g");
    SynthesiserV2 synthesiser= new SynthesiserV2();
    String word;
    public Test() {
        initComponents();
        init();
    }
    public void setWord(Word w){
        word=w.getSpelling();
        jTextField1.setText(word);
    }
    public void init(){
        duplex.setLanguage("en");
        stop.setEnabled(false);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        record = new javax.swing.JButton();
        stop = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        response = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Kiểm tra phát âm");
        setLocation(new java.awt.Point(400, 150));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Say :");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(87, 0, 236, 23));

        jTextField1.setEditable(false);
        jTextField1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField1.setText("word");
        jTextField1.setToolTipText("");
        getContentPane().add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(87, 29, 236, -1));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Volume3.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(178, 58, -1, -1));

        record.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/ghi.png"))); // NOI18N
        record.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recordActionPerformed(evt);
            }
        });
        getContentPane().add(record, new org.netbeans.lib.awtextra.AbsoluteConstraints(109, 121, -1, -1));

        stop.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/stop.jpg"))); // NOI18N
        stop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopActionPerformed(evt);
            }
        });
        getContentPane().add(stop, new org.netbeans.lib.awtextra.AbsoluteConstraints(242, 121, -1, -1));

        response.setEditable(false);
        response.setColumns(20);
        response.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        response.setLineWrap(true);
        response.setRows(5);
        response.setEnabled(false);
        jScrollPane1.setViewportView(response);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(109, 160, 209, -1));

        jLabel2.setText("sau khi phát âm đợi 2-3s rồi nhấn stop");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(119, 272, -1, -1));

        jLabel3.setBackground(new java.awt.Color(255, 153, 153));
        jLabel3.setOpaque(true);
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 430, 300));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
         try {
                    synthesiser.speak(jTextField1.getText());
                
           } catch (JavaLayerException ex) {
                Logger.getLogger(Trans.class.getName()).log(Level.SEVERE, null, ex);}
    }//GEN-LAST:event_jButton1ActionPerformed

    private void recordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recordActionPerformed
        response.setText("");
        response.setEnabled(false);
        new Thread(() -> {
					try {
						duplex.recognize(mic.getTargetDataLine(), mic.getAudioFormat());
					} catch (Exception ex) {
						ex.printStackTrace();
					}
					
				}).start();
				record.setEnabled(false);
				stop.setEnabled(true);
       abc();
    }//GEN-LAST:event_recordActionPerformed

    private void stopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopActionPerformed
        // TODO add your handling code here:
         mic.close();
        duplex.stopSpeechRecognition();
        record.setEnabled(true);
        stop.setEnabled(false);
        response.setEnabled(true);
        if(word.equals(response.getText()))
        {    try {
            synthesiser.speak("Correct");
            JOptionPane.showMessageDialog(null,"Bạn đã phát âm đúng ^^, đừng quên luyện tập lại ","Xin chúc mừng", JOptionPane.INFORMATION_MESSAGE);
             } catch (JavaLayerException ex) {
                 Logger.getLogger(Test.class.getName()).log(Level.SEVERE, null, ex);
             }
         
        }
        else
        {
             try {
                 synthesiser.speak("Wrong");
                 JOptionPane.showMessageDialog(null,"Bạn đã phát âm sai :(( , cố gắng lên nhé ","Xin chia buồn", JOptionPane.INFORMATION_MESSAGE);
             } catch (JavaLayerException ex) {
                 Logger.getLogger(Test.class.getName()).log(Level.SEVERE, null, ex);
             }
            
        }
    }//GEN-LAST:event_stopActionPerformed
     public void abc(){
        duplex.addResponseListener(new GSpeechResponseListener() {
                String old_text = "";
                
                public void onResponse(GoogleResponse gr) {
                        String output = "";
                        output = gr.getResponse();
                        if (gr.getResponse() == null) {
                                this.old_text = response.getText();
                                if (this.old_text.contains("(")) {
                                        this.old_text = this.old_text.substring(0, this.old_text.indexOf('('));
                                }
                                this.old_text = ( response.getText() + "\n" );
                                this.old_text = this.old_text.replace(")", "").replace("( ", "");
                                response.setText(this.old_text);
                                return;
                        }
                        if (output.contains("(")) {
                                output = output.substring(0, output.indexOf('('));
                        }
                        if (!gr.getOtherPossibleResponses().isEmpty()) {
                                output = output + " (" + (String) gr.getOtherPossibleResponses().get(0) + ")";
                        }
                        response.setText("");
                        response.append(this.old_text);
                        response.append(output);
                }
        });
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Test().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JButton record;
    private javax.swing.JTextArea response;
    private javax.swing.JButton stop;
    // End of variables declaration//GEN-END:variables
}
